---
- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_items:
    - "{{ ansible_distribution_release }}.yml"
    - "common.yml"

- name: Disable unattended upgrades
  copy:
    content: 'APT::Periodic::Unattended-Upgrade "0";'
    dest: "{{ item }}"
  with_items:
    - /etc/apt/apt.conf.d/10periodic
    - /etc/apt/apt.conf.d/20auto-upgrades

- name: Add Nectar archive keys
  apt_key:
    url: "{{ item }}"
  with_items:
    - http://download.rc.nectar.org.au/nectar-archive-key-2016.gpg
    - http://download.rc.nectar.org.au/nectar-custom.gpg

- name: Add Nectar repositories
  apt_repository:
    repo: "{{ item }}"
    update_cache: yes
  with_items:
    - "deb http://download.rc.nectar.org.au/nectar-ubuntu {{ ansible_distribution_release }} main"
    - "deb http://download.rc.nectar.org.au/nectar-ubuntu {{ ansible_distribution_release }}-{{ openstack_version }} main"
    - "deb http://download.rc.nectar.org.au/nectar-ubuntu {{ ansible_distribution_release }}-{{ openstack_version }}-testing main"

- name: Add Puppet Key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 6F6B15509CF8E59E6E469F327F438280EF8D349F

- name: Add Puppet PC1 Repo
  apt_repository:
    repo: "deb http://apt.puppetlabs.com {{ ansible_distribution_release }} PC1"
    update_cache: yes
  when: ansible_distribution_release == 'xenial'

- name: Add Puppet 5 Repo
  apt_repository:
    repo: "deb http://apt.puppetlabs.com {{ ansible_distribution_release }} puppet5"
    update_cache: yes
  when: ansible_distribution_release == 'bionic'

- name: Add NodeJS repo key
  apt_key:
    url: http://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
  when: nodejs_repo is defined

- name: Add NodeJS repo
  apt_repository:
    repo: "deb https://deb.nodesource.com/{{ nodejs_repo }} {{ ansible_distribution_release }} main"
    update_cache: yes
    filename: nodejs
  when: nodejs_repo is defined

- name: Add ansible PPA
  apt_repository:
    repo: 'ppa:ansible/ansible'

- name: Install common packages
  package:
    name: "{{ common_packages }}"
    state: present

- name: Install distrubution specific packages
  package:
    name: "{{ packages }}"
    state: present
  when: packages is defined

- name: Install pip packages
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
  with_items: "{{ pip_packages }}"
  when: pip_packages is defined

- name: Install packer
  unarchive:
    src: "https://releases.hashicorp.com/packer/{{ packer_version }}/packer_{{ packer_version }}_linux_amd64.zip"
    dest: /usr/local/bin/
    remote_src: True

- name: Install gem packages
  gem:
    name: "{{ item }}"
    state: present
    user_install: no
  with_items: "{{ gem_packages }}"
  when: gem_packages is defined

- name: Perform a full upgrade
  apt:
    upgrade: dist
    update_cache: yes
    dpkg_options: 'force-confold,force-confdef'
  when: nectar_test_build is not defined

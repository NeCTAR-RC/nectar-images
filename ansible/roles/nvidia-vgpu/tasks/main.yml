---
- name: Include OS-specific variables
  include_vars: "{{ vars_item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution | lower }}_{{ ansible_distribution_release }}.yml"
    - "{{ ansible_os_family | lower }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family | lower }}_{{ ansible_distribution_release }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  loop_control:
    loop_var: vars_item

- name: Include OS-specific tasks
  include_tasks: "{{ tasks_item }}"
  with_first_found:
    - "setup-{{ ansible_distribution | lower }}_{{ ansible_distribution_major_version }}.yml"
    - "setup-{{ ansible_distribution | lower }}_{{ ansible_distribution_release }}.yml"
    - "setup-{{ ansible_os_family | lower }}_{{ ansible_distribution_major_version }}.yml"
    - "setup-{{ ansible_os_family | lower }}_{{ ansible_distribution_release }}.yml"
    - "setup-{{ ansible_distribution | lower }}.yml"
    - "setup-{{ ansible_os_family | lower }}.yml"
  loop_control:
    loop_var: tasks_item

- name: Copy the NVIDIA gridd config file
  template:
    src: gridd.conf.j2
    dest: /etc/nvidia/gridd.conf
    mode: 0644

- name: Copy the NVIDIA grid setup script
  template:
    src: nvidia-grid-setup.j2
    dest: /usr/local/sbin/nvidia-grid-setup
    mode: 0755

- name: Create nvidia-gridd.service.d directory
  file:
    path: /etc/systemd/system/nvidia-gridd.service.d
    state: directory

- name: Copy nvidia-gridd.service drop-in override
  template:
    src: nvidia-gridd.service-override.conf.j2
    dest: /etc/systemd/system/nvidia-gridd.service.d/override.conf

- name: Blacklist the nouveau driver module
  kernel_blacklist:
    name: nouveau
    state: present

- name: Copy the NVIDIA CUDA profile script
  template:
    src: profile-cuda.sh.j2
    dest: /etc/profile.d/cuda.sh
    mode: 0644

#- name: Install testing script
#  copy:
#    src: 100-nvidia-grid-driver.sh
#    dest: /usr/nectar/tests.d
#    mode: 0755

- name: Set NVIDIA grid driver version fact
  set_fact:
    nectar_image_property_nvidia_grid_version: "{{ nvidia_vgpu_software_version }}"

- name: Set NVIDIA driver version fact
  set_fact:
    nectar_image_property_nvidia_driver_version: "{{ nvidia_grid_driver_version }}"

- name: Set NVIDIA CUDA version fact
  set_fact:
    nectar_image_property_nvidia_cuda_version: "{{ nvidia_cuda_version }}"

# This property will be used to determine if the instance should be able to
# access the license token
- name: Set nectar_vgpu property on the image
  set_fact:
    nectar_image_property_nectar_vgpu: 'yes'

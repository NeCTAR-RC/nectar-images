---
- name: Include OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}_{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: Add cloud repository for CentOS
  yum_repository:
    name: "centos-openstack-{{ openstack_version }}"
    description: "CentOS {{ ansible_distribution_major_version }} - OpenStack {{ openstack_version }}"
    baseurl: "http://mirror.centos.org/centos/{{ ansible_distribution_major_version }}/cloud/x86_64/openstack-{{ openstack_version }}/"
    gpgcheck: no
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Scientific'

- name: Add cloud repository for openSUSE
  zypper_repository:
    name: openstack
    repo: "obs://Cloud:OpenStack:{{ openstack_version|title }}/openSUSE_Leap_{{ ansible_distribution_version }}"
    disable_gpg_check: true
  when: ansible_distribution == 'openSUSE Leap'

- name: Add gplhost apt-key
  apt_key:
    url: http://syd2.apt-proxy.gplhost.com/debian/repository_key.asc
    state: present
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'
- name: Add cloud repository for Debian 7
  apt_repository:
    repo: "deb http://syd2.apt-proxy.gplhost.com/debian {{ item }} main"
    state: present
  with_items:
    - juno
    - juno-backports
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

- name: Ensure debconf is installed
  package:
    name: debconf
    state: installed
  when: ansible_os_family == 'Debian'

# We include the datasources in the cloud.cfg file anyway, but the cloud-init
# package generates /etc/cloud/cloud.cfg.d/90_dpkg.cfg from debconf, so we
# also need to set this here, or package upgrades will just override it
- name: Set datasources for Ubuntu/Debian
  shell: echo "cloud-init cloud-init/datasources multiselect {{ datasources|join(', ') }}" | debconf-set-selections
  when: ansible_os_family == 'Debian'

- name: Install cloud packages
  package:
    name: "{{ item }}"
    state: installed
  with_items: "{{ cloud_packages }}"

- name: Add dpkg-divert for cloud.cfg
  command: dpkg-divert --add --rename --quiet --local --divert /etc/cloud/cloud.cfg.dist /etc/cloud/cloud.cfg
  args:
    creates: '/etc/cloud/cloud.cfg.debian'
  when: ansible_os_family == 'Debian'

- name: Remove cloud repository for CentOS
  yum_repository:
    name: "centos-openstack-{{ openstack_version }}"
    state: absent
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Scientific'

- name: Remove cloud repository for Debian 7
  apt_repository:
    repo: "deb http://syd2.apt-proxy.gplhost.com/debian {{ item }} main"
    state: absent
  with_items:
    - juno
    - juno-backports
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

- name: Install custom heat-cfntools for Ubuntu trusty
  apt:
    deb: http://au.archive.ubuntu.com/ubuntu/pool/universe/h/heat-cfntools/heat-cfntools_1.2.7-2_all.deb
  when: ansible_distribution_release == 'trusty'

- name: Add cloud-init config file
  template:
    src: cloud.cfg.j2
    dest: /etc/cloud/cloud.cfg

- name: Don't requiretty for sudo
  lineinfile:
    dest: /etc/sudoers
    regexp: '^Defaults\t!requiretty$'
    insertafter: '^Defaults\s+env_reset$'
    line: 'Defaults	!requiretty'
    validate: 'visudo -cf %s'

- name: Reset networking config on Ubuntu xenial
  copy:
    src: "{{ ansible_distribution }}/interfaces"
    dest: /etc/network/interfaces
  when: ansible_distribution == 'Ubuntu'

- name: Fix networking to bring up interface and work correctly with cloud-init
  replace:
    dest: /etc/network/interfaces
    regexp: '^allow-hotplug (\w+)$'
    replace: 'auto \1'
  when: ansible_os_family == 'Debian'

# Update logging config to match cloud-init default in later versions
- name: Add cloud-init-output.log logging for Debian 7
  lineinfile:
    dest: /etc/cloud/cloud.cfg.d/05_logging.cfg
    line: "output: {all: '| tee -a /var/log/cloud-init-output.log'}"
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '7'

# Ansible 2.4 breaks the config file. We'll handle it manually with regex
- name: Disable SELinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^#?SELINUX='
    line: 'SELINUX=disabled'
    state: present
  when: ansible_os_family == 'RedHat'

# https://code.launchpad.net/~jordane/cloud-init/sshd-systemd-fix
- name: Fix cloud-init service dependency with SSH for CentOS 7
  copy:
    src: CentOS/7/cloud-init.service
    dest: /etc/systemd/system/cloud-init.service
  notify: systemctl-daemon-reload
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'

- name: Ensure cloud-init set to start on boot
  service:
    name: "{{ item }}"
    enabled: yes
  with_items:
    - cloud-config
    - cloud-init-local
    - cloud-init
    - cloud-final
  when: ansible_ssh_user != 'vagrant'

# http://blog.backslasher.net/growroot-centos.html
- name: Rebuild initramfs with growroot for CentOS 6
  shell: 'dracut -f'
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'

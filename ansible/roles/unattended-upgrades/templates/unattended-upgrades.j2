// Unattended-Upgrade::Origins-Pattern controls which packages are
// upgraded.
Unattended-Upgrade::Allowed-Origins {
{% for pattern in unattended_origins_patterns | default([]) %}
	"{{ pattern }}";
{% endfor %}
};

// List of packages to not update (regexp are supported)
Unattended-Upgrade::Package-Blacklist {
{% for package in unattended_package_blacklist | default([]) %}
	"{{ package }}";
{% endfor %}
};

{% if ansible_distribution == "Ubuntu" %}
// This option will controls whether the development release of Ubuntu will be
// upgraded automatically.
Unattended-Upgrade::DevRelease "false";

{% endif %}
// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run 
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
{% if unattended_autofix_interrupted_dpkg is defined %}
Unattended-Upgrade::AutoFixInterruptedDpkg "{{ unattended_autofix_interrupted_dpkg }}";
{% else %}
//Unattended-Upgrade::AutoFixInterruptedDpkg "false";
{% endif %}

// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGTERM. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
{% if unattended_minimal_steps is defined %}
//Unattended-Upgrade::MinimalSteps "{{ unattended_minimal_steps }}";
{% else %}
//Unattended-Upgrade::MinimalSteps "false";
{% endif %}

// Install all unattended-upgrades when the machine is shutting down
// instead of doing it in the background while the machine is running
// This will (obviously) make shutdown slower
{% if unattended_install_on_shutdown is defined %}
Unattended-Upgrade::InstallOnShutdown "{{ unattended_install_on_shutdown }}";
{% else %}
//Unattended-Upgrade::InstallOnShutdown "true";
{% endif %}

// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed. E.g. "user@example.com"
{% if unattended_mail is defined %}
Unattended-Upgrade::Mail "{{ unattended_mail }}";
{% else %}
//Unattended-Upgrade::Mail "root";
{% endif %}

// Set this value to "true" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
{% if unattended_mail_only_on_error is defined %}
Unattended-Upgrade::MailOnlyOnError "{{ unattended_mail_only_on_error }}";
{% else %}
//Unattended-Upgrade::MailOnlyOnError "true";
{% endif %}

// Remove unused automatically installed kernel-related packages
// (kernel images, kernel headers and kernel version locked tools).
{% if unattended_remove_unused_kernel_packages is defined %}
Unattended-Upgrade::Remove-Unused-Kernel-Packages "{{ unattended_remove_unused_kernel_packages }}";
{% else %}
//Unattended-Upgrade::Remove-Unused-Kernel-Packages "false";
{% endif %}

// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
{% if unattended_remove_unused_dependencies is defined %}
Unattended-Upgrade::Remove-Unused-Dependencies "{{ unattended_remove_unused_dependencies }}";
{% else %}
//Unattended-Upgrade::Remove-Unused-Dependencies "false";
{% endif %}

// Automatically reboot *WITHOUT CONFIRMATION*
//  if the file /var/run/reboot-required is found after the upgrade 
{% if unattended_automatic_reboot is defined %}
Unattended-Upgrade::Automatic-Reboot "{{ unattended_automatic_reboot }}";
{% else %}
//Unattended-Upgrade::Automatic-Reboot "false";
{% endif %}

// Automatically reboot even if there are users currently logged in
// when Unattended-Upgrade::Automatic-Reboot is set to true
{% if unattended_automatic_reboot_with_users is defined %}
Unattended-Upgrade::Automatic-Reboot-WithUsers "{{ unattended_automatic_reboot_with_users }}";
{% else %}
//Unattended-Upgrade::Automatic-Reboot-WithUsers "true";
{% endif %}

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
//  Default: "now"
{% if unattended_automatic_reboot_time is defined %}
Unattended-Upgrade::Automatic-Reboot-Time "{{ unattended_automatic_reboot_time }}";
{% else %}
//Unattended-Upgrade::Automatic-Reboot-Time "02:00";
{% endif %}

// Use apt bandwidth limit feature, this example limits the download
// speed to 70kb/sec
{% if unattended_dl_limit is defined %}
Acquire::http::Dl-Limit "{{ unattended_dl_limit }}";
{% else %}
//Acquire::http::Dl-Limit "70";
{% endif %}

// Enable logging to syslog. Default is False
{% if unattended_syslog_enable is defined %}
Unattended-Upgrade::SyslogEnable "{{ unattended_syslog_enable }}";
{% else %}
// Unattended-Upgrade::SyslogEnable "false";
{% endif %}

// Specify syslog facility. Default is daemon
{% if unattended_syslog_facility is defined %}
Unattended-Upgrade::SyslogFacility "{{ unattended_syslog_facility }}";
{% else %}
// Unattended-Upgrade::SyslogFacility "daemon";
{% endif %}

// Download and install upgrades only on AC power
// (i.e. skip or gracefully stop updates on battery)
// Unattended-Upgrade::OnlyOnACPower "true";

// Download and install upgrades only on non-metered connection
// (i.e. skip or gracefully stop updates on a metered connection)
// Unattended-Upgrade::Skip-Updates-On-Metered-Connections "true";

// Verbose logging
{% if unattended_verbose is defined %}
Unattended-Upgrade::Verbose "{{ unattended_verbose }}";
{% else %}
// Unattended-Upgrade::Verbose "false";
{% endif %}

// Print debugging information both in unattended-upgrades and
// in unattended-upgrade-shutdown
{% if unattended_debug is defined %}
Unattended-Upgrade::Debug "{{ unattended_debug }}";
{% else %}
// Unattended-Upgrade::Debug "false";
{% endif %}

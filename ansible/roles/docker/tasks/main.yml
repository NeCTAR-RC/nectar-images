---
- name: Install Docker and role dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - cron
    install_recommends: False

- name: Add Docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

- name: Configure upstream APT repository
  apt_repository:
    repo: "{{ docker_repository }}"
    update_cache: True

- name: Install Docker
  apt:
    name: "docker-{{ docker_edition }}={{ docker_apt_package_name }}"
    state: present
    update_cache: True
    install_recommends: False
    cache_valid_time: "{{ docker_apt_cache_time }}"

- name: Remove Upstart config file
  file:
    path: /etc/default/docker
    state: absent

- name: Ensure systemd directory exists
  file:
    path: /etc/systemd/system
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Generate systemd unit file
  template:
    src: etc/systemd/system/docker.service.j2
    dest: /etc/systemd/system/docker.service
    owner: root
    group: root
    mode: 0644
  register: docker_register_systemd_service

- name: Reload systemd daemon
  command: "systemctl daemon-reload"
  notify: Restart Docker
  when: (docker_register_systemd_service and
         docker_register_systemd_service | changed)

- name: Add specific users to docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: True
  with_items: "{{ docker_users }}"
  when: docker_users

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    force: True
    owner: root
    group: root
    mode: 0755
  when: docker_install_docker_compose

- name: Create cron tasks for Docker commands
  cron:
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    minute: "{{ item.schedule[0] }}"
    hour: "{{ item.schedule[1] }}"
    day: "{{ item.schedule[2] }}"
    month: "{{ item.schedule[3] }}"
    weekday: "{{ item.schedule[4] }}"
  with_items: "{{ docker_cron_tasks }}"
  when: docker_cron_tasks
